package expo.modules.updates;

import java.lang.System;

@kotlin.Metadata(mv = {1, 6, 0}, k = 1, d1 = {"\u0000B\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010$\n\u0002\u0010\u000e\n\u0002\b\u0002\n\u0002\u0010\u000b\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0010\b\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u000e\n\u0002\u0018\u0002\n\u0002\b\u0016\u0018\u0000 82\u00020\u0001:\u000278B\'\b\u0016\u0012\b\u0010\u0002\u001a\u0004\u0018\u00010\u0003\u0012\u0014\u0010\u0004\u001a\u0010\u0012\u0004\u0012\u00020\u0006\u0012\u0004\u0012\u00020\u0001\u0018\u00010\u0005\u00a2\u0006\u0002\u0010\u0007B\u00a3\u0001\b\u0002\u0012\u0006\u0010\b\u001a\u00020\t\u0012\u0006\u0010\n\u001a\u00020\t\u0012\b\u0010\u000b\u001a\u0004\u0018\u00010\u0006\u0012\b\u0010\f\u001a\u0004\u0018\u00010\r\u0012\b\u0010\u000e\u001a\u0004\u0018\u00010\u0006\u0012\b\u0010\u000f\u001a\u0004\u0018\u00010\u0006\u0012\u0006\u0010\u0010\u001a\u00020\u0006\u0012\u0006\u0010\u0011\u001a\u00020\u0012\u0012\u0006\u0010\u0013\u001a\u00020\u0014\u0012\u0006\u0010\u0015\u001a\u00020\t\u0012\u0012\u0010\u0016\u001a\u000e\u0012\u0004\u0012\u00020\u0006\u0012\u0004\u0012\u00020\u00060\u0005\u0012\b\u0010\u0017\u001a\u0004\u0018\u00010\u0006\u0012\u0014\u0010\u0018\u001a\u0010\u0012\u0004\u0012\u00020\u0006\u0012\u0004\u0012\u00020\u0006\u0018\u00010\u0005\u0012\u0006\u0010\u0019\u001a\u00020\t\u0012\u0006\u0010\u001a\u001a\u00020\t\u00a2\u0006\u0002\u0010\u001bR\u0011\u0010\u0013\u001a\u00020\u0014\u00a2\u0006\b\n\u0000\u001a\u0004\b\u001c\u0010\u001dR\u0011\u0010\u001a\u001a\u00020\t\u00a2\u0006\b\n\u0000\u001a\u0004\b\u001e\u0010\u001fR\u0013\u0010\u0017\u001a\u0004\u0018\u00010\u0006\u00a2\u0006\b\n\u0000\u001a\u0004\b \u0010!R\u001d\u0010\"\u001a\u0004\u0018\u00010#8FX\u0086\u0084\u0002\u00a2\u0006\f\n\u0004\b&\u0010\'\u001a\u0004\b$\u0010%R\u0011\u0010\u0019\u001a\u00020\t\u00a2\u0006\b\n\u0000\u001a\u0004\b(\u0010\u001fR\u001f\u0010\u0018\u001a\u0010\u0012\u0004\u0012\u00020\u0006\u0012\u0004\u0012\u00020\u0006\u0018\u00010\u0005\u00a2\u0006\b\n\u0000\u001a\u0004\b)\u0010*R\u0011\u0010\n\u001a\u00020\t\u00a2\u0006\b\n\u0000\u001a\u0004\b+\u0010\u001fR\u0011\u0010\u0015\u001a\u00020\t\u00a2\u0006\b\n\u0000\u001a\u0004\b,\u0010\u001fR\u0011\u0010\b\u001a\u00020\t\u00a2\u0006\b\n\u0000\u001a\u0004\b\b\u0010\u001fR\u0011\u0010-\u001a\u00020\t8F\u00a2\u0006\u0006\u001a\u0004\b-\u0010\u001fR\u0011\u0010\u0011\u001a\u00020\u0012\u00a2\u0006\b\n\u0000\u001a\u0004\b.\u0010/R\u0011\u0010\u0010\u001a\u00020\u0006\u00a2\u0006\b\n\u0000\u001a\u0004\b0\u0010!R\u001d\u0010\u0016\u001a\u000e\u0012\u0004\u0012\u00020\u0006\u0012\u0004\u0012\u00020\u00060\u0005\u00a2\u0006\b\n\u0000\u001a\u0004\b1\u0010*R\u0013\u0010\u000f\u001a\u0004\u0018\u00010\u0006\u00a2\u0006\b\n\u0000\u001a\u0004\b2\u0010!R\u0013\u0010\u000b\u001a\u0004\u0018\u00010\u0006\u00a2\u0006\b\n\u0000\u001a\u0004\b3\u0010!R\u0013\u0010\u000e\u001a\u0004\u0018\u00010\u0006\u00a2\u0006\b\n\u0000\u001a\u0004\b4\u0010!R\u0013\u0010\f\u001a\u0004\u0018\u00010\r\u00a2\u0006\b\n\u0000\u001a\u0004\b5\u00106\u00a8\u00069"}, d2 = {"Lexpo/modules/updates/UpdatesConfiguration;", "", "context", "Landroid/content/Context;", "overrideMap", "", "", "(Landroid/content/Context;Ljava/util/Map;)V", "isEnabled", "", "expectsSignedManifest", "scopeKey", "updateUrl", "Landroid/net/Uri;", "sdkVersion", "runtimeVersion", "releaseChannel", "launchWaitMs", "", "checkOnLaunch", "Lexpo/modules/updates/UpdatesConfiguration$CheckAutomaticallyConfiguration;", "hasEmbeddedUpdate", "requestHeaders", "codeSigningCertificate", "codeSigningMetadata", "codeSigningIncludeManifestResponseCertificateChain", "codeSigningAllowUnsignedManifests", "(ZZLjava/lang/String;Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILexpo/modules/updates/UpdatesConfiguration$CheckAutomaticallyConfiguration;ZLjava/util/Map;Ljava/lang/String;Ljava/util/Map;ZZ)V", "getCheckOnLaunch", "()Lexpo/modules/updates/UpdatesConfiguration$CheckAutomaticallyConfiguration;", "getCodeSigningAllowUnsignedManifests", "()Z", "getCodeSigningCertificate", "()Ljava/lang/String;", "codeSigningConfiguration", "Lexpo/modules/updates/codesigning/CodeSigningConfiguration;", "getCodeSigningConfiguration", "()Lexpo/modules/updates/codesigning/CodeSigningConfiguration;", "codeSigningConfiguration$delegate", "Lkotlin/Lazy;", "getCodeSigningIncludeManifestResponseCertificateChain", "getCodeSigningMetadata", "()Ljava/util/Map;", "getExpectsSignedManifest", "getHasEmbeddedUpdate", "isMissingRuntimeVersion", "getLaunchWaitMs", "()I", "getReleaseChannel", "getRequestHeaders", "getRuntimeVersion", "getScopeKey", "getSdkVersion", "getUpdateUrl", "()Landroid/net/Uri;", "CheckAutomaticallyConfiguration", "Companion", "expo-updates_debug"})
public final class UpdatesConfiguration {
    private final boolean isEnabled = false;
    private final boolean expectsSignedManifest = false;
    @org.jetbrains.annotations.Nullable
    private final java.lang.String scopeKey = null;
    @org.jetbrains.annotations.Nullable
    private final android.net.Uri updateUrl = null;
    @org.jetbrains.annotations.Nullable
    private final java.lang.String sdkVersion = null;
    @org.jetbrains.annotations.Nullable
    private final java.lang.String runtimeVersion = null;
    @org.jetbrains.annotations.NotNull
    private final java.lang.String releaseChannel = null;
    private final int launchWaitMs = 0;
    @org.jetbrains.annotations.NotNull
    private final expo.modules.updates.UpdatesConfiguration.CheckAutomaticallyConfiguration checkOnLaunch = null;
    private final boolean hasEmbeddedUpdate = false;
    @org.jetbrains.annotations.NotNull
    private final java.util.Map<java.lang.String, java.lang.String> requestHeaders = null;
    @org.jetbrains.annotations.Nullable
    private final java.lang.String codeSigningCertificate = null;
    @org.jetbrains.annotations.Nullable
    private final java.util.Map<java.lang.String, java.lang.String> codeSigningMetadata = null;
    private final boolean codeSigningIncludeManifestResponseCertificateChain = false;
    private final boolean codeSigningAllowUnsignedManifests = false;
    @org.jetbrains.annotations.Nullable
    private final kotlin.Lazy codeSigningConfiguration$delegate = null;
    @org.jetbrains.annotations.NotNull
    public static final expo.modules.updates.UpdatesConfiguration.Companion Companion = null;
    private static final java.lang.String TAG = null;
    @org.jetbrains.annotations.NotNull
    public static final java.lang.String UPDATES_CONFIGURATION_ENABLED_KEY = "enabled";
    @org.jetbrains.annotations.NotNull
    public static final java.lang.String UPDATES_CONFIGURATION_SCOPE_KEY_KEY = "scopeKey";
    @org.jetbrains.annotations.NotNull
    public static final java.lang.String UPDATES_CONFIGURATION_UPDATE_URL_KEY = "updateUrl";
    @org.jetbrains.annotations.NotNull
    public static final java.lang.String UPDATES_CONFIGURATION_REQUEST_HEADERS_KEY = "requestHeaders";
    @org.jetbrains.annotations.NotNull
    public static final java.lang.String UPDATES_CONFIGURATION_RELEASE_CHANNEL_KEY = "releaseChannel";
    @org.jetbrains.annotations.NotNull
    public static final java.lang.String UPDATES_CONFIGURATION_SDK_VERSION_KEY = "sdkVersion";
    @org.jetbrains.annotations.NotNull
    public static final java.lang.String UPDATES_CONFIGURATION_RUNTIME_VERSION_KEY = "runtimeVersion";
    @org.jetbrains.annotations.NotNull
    public static final java.lang.String UPDATES_CONFIGURATION_CHECK_ON_LAUNCH_KEY = "checkOnLaunch";
    @org.jetbrains.annotations.NotNull
    public static final java.lang.String UPDATES_CONFIGURATION_LAUNCH_WAIT_MS_KEY = "launchWaitMs";
    @org.jetbrains.annotations.NotNull
    public static final java.lang.String UPDATES_CONFIGURATION_HAS_EMBEDDED_UPDATE_KEY = "hasEmbeddedUpdate";
    @org.jetbrains.annotations.NotNull
    public static final java.lang.String UPDATES_CONFIGURATION_EXPECTS_EXPO_SIGNED_MANIFEST = "expectsSignedManifest";
    @org.jetbrains.annotations.NotNull
    public static final java.lang.String UPDATES_CONFIGURATION_CODE_SIGNING_CERTIFICATE = "codeSigningCertificate";
    @org.jetbrains.annotations.NotNull
    public static final java.lang.String UPDATES_CONFIGURATION_CODE_SIGNING_METADATA = "codeSigningMetadata";
    @org.jetbrains.annotations.NotNull
    public static final java.lang.String UPDATES_CONFIGURATION_CODE_SIGNING_INCLUDE_MANIFEST_RESPONSE_CERTIFICATE_CHAIN = "codeSigningIncludeManifestResponseCertificateChain";
    @org.jetbrains.annotations.NotNull
    public static final java.lang.String UPDATES_CONFIGURATION_CODE_SIGNING_ALLOW_UNSIGNED_MANIFESTS = "codeSigningAllowUnsignedManifests";
    private static final java.lang.String UPDATES_CONFIGURATION_RELEASE_CHANNEL_DEFAULT_VALUE = "default";
    private static final int UPDATES_CONFIGURATION_LAUNCH_WAIT_MS_DEFAULT_VALUE = 0;
    
    private UpdatesConfiguration(boolean isEnabled, boolean expectsSignedManifest, java.lang.String scopeKey, android.net.Uri updateUrl, java.lang.String sdkVersion, java.lang.String runtimeVersion, java.lang.String releaseChannel, int launchWaitMs, expo.modules.updates.UpdatesConfiguration.CheckAutomaticallyConfiguration checkOnLaunch, boolean hasEmbeddedUpdate, java.util.Map<java.lang.String, java.lang.String> requestHeaders, java.lang.String codeSigningCertificate, java.util.Map<java.lang.String, java.lang.String> codeSigningMetadata, boolean codeSigningIncludeManifestResponseCertificateChain, boolean codeSigningAllowUnsignedManifests) {
        super();
    }
    
    public final boolean isEnabled() {
        return false;
    }
    
    public final boolean getExpectsSignedManifest() {
        return false;
    }
    
    @org.jetbrains.annotations.Nullable
    public final java.lang.String getScopeKey() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final android.net.Uri getUpdateUrl() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final java.lang.String getSdkVersion() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final java.lang.String getRuntimeVersion() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull
    public final java.lang.String getReleaseChannel() {
        return null;
    }
    
    public final int getLaunchWaitMs() {
        return 0;
    }
    
    @org.jetbrains.annotations.NotNull
    public final expo.modules.updates.UpdatesConfiguration.CheckAutomaticallyConfiguration getCheckOnLaunch() {
        return null;
    }
    
    public final boolean getHasEmbeddedUpdate() {
        return false;
    }
    
    @org.jetbrains.annotations.NotNull
    public final java.util.Map<java.lang.String, java.lang.String> getRequestHeaders() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final java.lang.String getCodeSigningCertificate() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable
    public final java.util.Map<java.lang.String, java.lang.String> getCodeSigningMetadata() {
        return null;
    }
    
    public final boolean getCodeSigningIncludeManifestResponseCertificateChain() {
        return false;
    }
    
    public final boolean getCodeSigningAllowUnsignedManifests() {
        return false;
    }
    
    public UpdatesConfiguration(@org.jetbrains.annotations.Nullable
    android.content.Context context, @org.jetbrains.annotations.Nullable
    java.util.Map<java.lang.String, ? extends java.lang.Object> overrideMap) {
        super();
    }
    
    public final boolean isMissingRuntimeVersion() {
        return false;
    }
    
    @org.jetbrains.annotations.Nullable
    public final expo.modules.updates.codesigning.CodeSigningConfiguration getCodeSigningConfiguration() {
        return null;
    }
    
    @kotlin.Metadata(mv = {1, 6, 0}, k = 1, d1 = {"\u0000\f\n\u0002\u0018\u0002\n\u0002\u0010\u0010\n\u0002\b\u0006\b\u0086\u0001\u0018\u00002\b\u0012\u0004\u0012\u00020\u00000\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002j\u0002\b\u0003j\u0002\b\u0004j\u0002\b\u0005j\u0002\b\u0006\u00a8\u0006\u0007"}, d2 = {"Lexpo/modules/updates/UpdatesConfiguration$CheckAutomaticallyConfiguration;", "", "(Ljava/lang/String;I)V", "NEVER", "ERROR_RECOVERY_ONLY", "WIFI_ONLY", "ALWAYS", "expo-updates_debug"})
    public static enum CheckAutomaticallyConfiguration {
        /*public static final*/ NEVER /* = new NEVER() */,
        /*public static final*/ ERROR_RECOVERY_ONLY /* = new ERROR_RECOVERY_ONLY() */,
        /*public static final*/ WIFI_ONLY /* = new WIFI_ONLY() */,
        /*public static final*/ ALWAYS /* = new ALWAYS() */;
        
        CheckAutomaticallyConfiguration() {
        }
    }
    
    @kotlin.Metadata(mv = {1, 6, 0}, k = 1, d1 = {"\u0000\u001c\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\n\n\u0002\u0010\b\n\u0002\b\t\b\u0086\u0003\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002R\u0016\u0010\u0003\u001a\n \u0005*\u0004\u0018\u00010\u00040\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0006\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0007\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\b\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\t\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\n\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u000b\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\f\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\r\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u000e\u001a\u00020\u000fX\u0082T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0010\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0011\u001a\u00020\u0004X\u0082T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0012\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0013\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0014\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0015\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0016\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0017\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u0018"}, d2 = {"Lexpo/modules/updates/UpdatesConfiguration$Companion;", "", "()V", "TAG", "", "kotlin.jvm.PlatformType", "UPDATES_CONFIGURATION_CHECK_ON_LAUNCH_KEY", "UPDATES_CONFIGURATION_CODE_SIGNING_ALLOW_UNSIGNED_MANIFESTS", "UPDATES_CONFIGURATION_CODE_SIGNING_CERTIFICATE", "UPDATES_CONFIGURATION_CODE_SIGNING_INCLUDE_MANIFEST_RESPONSE_CERTIFICATE_CHAIN", "UPDATES_CONFIGURATION_CODE_SIGNING_METADATA", "UPDATES_CONFIGURATION_ENABLED_KEY", "UPDATES_CONFIGURATION_EXPECTS_EXPO_SIGNED_MANIFEST", "UPDATES_CONFIGURATION_HAS_EMBEDDED_UPDATE_KEY", "UPDATES_CONFIGURATION_LAUNCH_WAIT_MS_DEFAULT_VALUE", "", "UPDATES_CONFIGURATION_LAUNCH_WAIT_MS_KEY", "UPDATES_CONFIGURATION_RELEASE_CHANNEL_DEFAULT_VALUE", "UPDATES_CONFIGURATION_RELEASE_CHANNEL_KEY", "UPDATES_CONFIGURATION_REQUEST_HEADERS_KEY", "UPDATES_CONFIGURATION_RUNTIME_VERSION_KEY", "UPDATES_CONFIGURATION_SCOPE_KEY_KEY", "UPDATES_CONFIGURATION_SDK_VERSION_KEY", "UPDATES_CONFIGURATION_UPDATE_URL_KEY", "expo-updates_debug"})
    public static final class Companion {
        
        private Companion() {
            super();
        }
    }
}